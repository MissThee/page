(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2abe062c"],{"07c4":function(e,t,n){t=e.exports=n("24fb")(!0),t.push([e.i,".custom-tree-node[data-v-8b5cc4c2]{flex:1;display:flex;align-items:center;justify-content:space-between;font-size:14px;padding-right:8px}.el-button--mini[data-v-8b5cc4c2],.el-button--mini.is-round[data-v-8b5cc4c2]{padding:3px}[data-v-8b5cc4c2] .el-loading-spinner .circular{margin-top:11px;height:20px;width:20px;-webkit-animation:loading-rotate 2s linear infinite;animation:loading-rotate 2s linear infinite}.tool-bar-label[data-v-8b5cc4c2]{font-weight:bolder;font-size:14px;color:#555}","",{version:3,sources:["H:/WORKWORK_TEST/page/src/views/content/md/src/views/content/md/MarkdownDoc.vue"],names:[],mappings:"AA+VA,mCACA,MAAA,CACA,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,cAAA,CACA,iBACA,CAGA,6EACA,WACA,CAGA,gDACA,eAAA,CACA,WAAA,CACA,UAAA,CACA,mDAAA,CACA,2CACA,CAEA,iCACA,kBAAA,CACA,cAAA,CACA,UACA",file:"MarkdownDoc.vue?vue&type=style&index=0&id=8b5cc4c2&scoped=true&lang=css&",sourcesContent:['<template>\n  <div style="margin:0 10%;">\n    <div v-show="isShowTree">\n      <div class="reduce-height-element">\n        <span class="tool-bar-label">初始目录深度(1开始，0为不限):</span>\n        <el-input-number size="mini" :min="0" :max="99999" label="" v-model="treeDeep"></el-input-number>\n        <el-button type="primary" size="small" style="margin-left:10px" plain @click="initTreeData">加载列表</el-button>\n        <el-input class="reduce-height-element" placeholder="输入关键字进行过滤" v-model="filterText"></el-input>\n      </div>\n      <div ref="treeArea" style="overflow: scroll" :style="{height: tableAutoHeight+\'px\'}">\n        <el-tree :default-expanded-keys="defaultExpandedKeys" :load="loadNode" lazy ref="fileTree" :filter-node-method="filterNode" :data="treeData" node-key="id" :props="defaultProps">\n        <span class="custom-tree-node" slot-scope="{ node, data }">\n          <span :style="{fontWeight:data.type===\'dir\'?\'bold\':\'\'}"><i :class="fileIcon(data.type,data.name)"></i>{{ node.label }}</span>\n          <span>\n            <span title="预览" style="width: 2em;display: inline-block">\n                <el-button\n                  v-if="showPreviewButton(data)"\n                  style="color:#67c23a;"\n                  plain\n                  size="mini"\n                  @click="() => {previewHandler(data);}">\n                <i class="el-icon-view"></i>\n                </el-button>\n            </span>\n            <span title="下载" style="width: 2em;display: inline-block">\n                <el-button\n                  v-loading="node.loading"\n                  v-if="data.download_url&&data.download_url.length>0"\n                  style="color:#e6a23c;"\n                  plain\n                  size="mini"\n                  @click="() => {downloadFileHandler(data.download_url,data.name,node);}">\n                  <i class="el-icon-download"></i>\n                </el-button>\n            </span>\n             <span title="原文件链接" style="width: 2em;display: inline-block">\n                <el-button\n                  style="color:#555555;"\n                  v-if="data.download_url&&data.download_url.length>0"\n                  plain\n                  size="mini">\n                  <a :href="data.download_url" target="_blank">\n                    <i class="el-icon-link"></i>\n                  </a>\n                </el-button>\n            </span>\n            <span title="前往github查看" style="width: 2em;display: inline-block">\n                <el-button\n                  style="color:#409eff;"\n                  plain\n                  size="mini">\n                   <a :href="data.html_url" target="_blank">\n                    <i class="el-icon-top-right"></i>\n                   </a>\n                </el-button>\n             </span>\n          </span>\n        </span>\n        </el-tree>\n      </div>\n      <div @click="scrollTreeToTop" v-if="isShowScrollTreeToTop" style="position: fixed;right: 2%;bottom: 160px;border: 1px solid #ccc;border-radius: 5px;text-align: center;vertical-align: middle;font-size: 10px;font-weight: bold;padding:8px;cursor: pointer;color:#666666"><i\n        class="el-icon-arrow-up"></i><br/>返<br/>回<br/>顶<br/>部\n      </div>\n      <el-dialog :close-on-click-modal="false" :visible.sync="isShowImagePreview" append-to-body title="图片预览">\n        <img width="100%" :src="currentImagePreviewFile.download_url" alt="图片预览">\n      </el-dialog>\n    </div>\n    <div v-if="!isShowTree" style="text-align: center">\n      <div class="reduce-height-element">\n        <div>\n          <el-button type="warning" size="mini" plain @click="backToTreeHandler" icon="el-icon-arrow-left">返回列表</el-button>\n          <el-button type="primary" size="mini" plain @click="switchEdit" icon="el-icon-edit">编辑/预览</el-button>\n        </div>\n        <div>\n          <el-button type="info" disabled size="mini" plain @click="isShowTree=true" style="color:#555;cursor: default">当前文档：{{decodeURI(currentMdEditorFile.path)}}</el-button>\n        </div>\n      </div>\n      <mark-down-area @save="preSaveMdFile" :height="tableAutoHeight" ref="md" :file-url="currentMdEditorFile.download_url"></mark-down-area>\n      <el-dialog style="text-align: center" :close-on-click-modal="false" :visible.sync="isShowPreSaveMdFileDialog" append-to-body title="提交">\n        <el-input placeholder="personal access token (保存在本地cookie)" v-model="token"></el-input>\n        <el-button :loading="currentMdEditorFileSaveButtonLoading" style="margin-top: 10px" type="primary" plain size="small" @click="sendSaveMdFile">确定</el-button>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n<script>\n  import MarkDownArea from \'src/views/common/MarkDownArea\';\n  import MdApi from \'src/api/md-api\';\n  import Global from \'src/utils/global\';\n  import SimpleAutoHeightTable from \'src/mixin/SimpleAutoHeightTable\';\n  import { setToken, getToken } from \'src/utils/cookies\';\n\n  export default {\n    name: \'MarkdownDoc\',\n    mixins: [SimpleAutoHeightTable],\n    components: {\n      MarkDownArea\n    },\n    data() {\n      return {\n\n        currentMdEditorFileValue: \'\',\n        isShowPreSaveMdFileDialog: false,\n        token: \'\',\n        isShowTree: true,\n        currentMdEditorFile: {},\n        currentMdEditorFileSaveButtonLoading: false,\n        currentImagePreviewFile: {},\n\n        filterText: \'\',\n        treeDeep: 1,\n        isShowScrollTreeToTop: false,\n        isShowImagePreview: false,\n        defaultExpandedKeys: [],\n        defaultProps: {\n          children: \'children\',\n          label: \'name\',\n          isLeaf: \'leaf\'\n        },\n        treeData: [],\n      };\n    },\n    created() {\n      this.$nextTick(() => {\n        this.$refs.treeArea.addEventListener(\'scroll\', this.treeAreaScrollHandler);\n        this.initTreeData();\n      });\n    },\n    methods: {\n      initTreeData() {\n        this.treeData = [];\n        this.defaultExpandedKeys = [];\n        this.requestTreeData(Global.GITHUB_API_HOST + \'/repos/\' + Global.USER + \'/\' + Global.REPOSITORY + \'/contents\' + Global.DOC_ROOT, this.treeData, undefined, this.treeDeep);\n      },\n      requestTreeData(url, treeData, nodeDeep, limitDeep) {\n        nodeDeep = nodeDeep || 0;\n        nodeDeep++;\n        if (limitDeep !== 0 && limitDeep < nodeDeep) {\n          return;\n        }\n        MdApi.getFileFromGithub({ url: url === undefined ? \'\' : url })\n          .then(({ data }) => {\n            data = data.sort(this.sortMethod);\n            data.forEach((item) => {\n              let node = item;\n              node.deep = nodeDeep;//节点深度，树中由1开始\n              node.leaf = item.type === \'file\';\n              node.id = item.path;\n              if (item.type === \'dir\') {\n                if (limitDeep === 0 || nodeDeep < limitDeep) {\n                  this.defaultExpandedKeys.push(node.id);\n                }\n                node.children = [];\n                this.requestTreeData(item.url, node.children, nodeDeep, limitDeep);\n              }\n              treeData.push(node);\n            });\n          });\n      },\n      showPreviewButton(data) {\n        if (data.type === \'file\') {\n          if (data.name.lastIndexOf(\'.\') > 0) {\n            switch (data.name.substring(data.name.lastIndexOf(\'.\') + 1)\n              .toLowerCase()) {\n              case \'md\':\n              case \'jpg\':\n              case \'png\':\n              case \'jpeg\':\n              case \'bmp\':\n              case \'gif\':\n                return true;\n              default:\n                return false;\n            }\n          }\n        }\n      },\n      previewHandler(data) {\n        if (data.name.lastIndexOf(\'.\') > 0) {\n          switch (data.name.substring(data.name.lastIndexOf(\'.\') + 1)\n            .toLowerCase()) {\n            case \'md\':\n              this.isShowTree = false;\n              this.currentMdEditorFile = data;\n              this.initSize();\n              break;\n            case \'jpg\':\n            case \'png\':\n            case \'jpeg\':\n            case \'bmp\':\n            case \'gif\':\n              this.currentImagePreviewFile = data;\n              this.isShowImagePreview = true;\n              break;\n          }\n        }\n      },\n      switchEdit() {\n        this.$refs.md.switchEdit();\n      },\n      downloadFileHandler(url, fileName, node) {\n        node.loading = true;\n        const Http = new XMLHttpRequest();\n        Http.responseType = \'arraybuffer\';\n        Http.open(\'GET\', url);\n        Http.send();\n        Http.onreadystatechange = () => {\n          try {\n            if (Http.readyState === 4) {\n              if (Http.status === 200) {\n                const content = Http.response;\n                const blob = new Blob([content]);\n                if (\'download\' in document.createElement(\'a\')) { // （非IE下载）\n                  const elink = document.createElement(\'a\');\n                  elink.download = fileName;\n                  elink.style.display = \'none\';\n                  elink.href = URL.createObjectURL(blob);\n                  document.body.appendChild(elink);\n                  elink.click();\n                  URL.revokeObjectURL(elink.href); // （释放URL 对象）\n                  document.body.removeChild(elink);\n                } else { // （IE10+下载）\n                  navigator.msSaveBlob(blob, fileName);\n                }\n              } else {\n                console.log(\'下载出错\');\n              }\n            }\n          } catch (e) {\n            console.log(\'下载出错\', e);\n          } finally {\n            setTimeout(() => {\n              node.loading = false;\n            }, 1500);\n          }\n        };\n      },\n      fileIcon(type, name) {\n        if (type === \'dir\') {\n          return { \'el-icon-folder\': true };\n        } else {\n          return { \'\': true };\n        }\n      },\n      scrollTreeToTop() {\n        this.$refs.treeArea.scrollTop = 0;\n      },\n      filterNode(value, data) {\n        if (!value) return true;\n        return data.name.indexOf(value) !== -1;\n      },\n      treeAreaScrollHandler() {\n        this.isShowScrollTreeToTop = this.$refs.treeArea.scrollTop > this.tableAutoHeight;\n      },\n      loadNode(node, resolve) {\n        if (node.data.deep < this.treeDeep || this.treeDeep === 0) {\n          setTimeout(() => {\n            return resolve(node.data.children);\n          }, 500);\n        } else {\n          if (node.data.type === \'dir\') {\n            MdApi.getFileFromGithub({ url: node.data.url })\n              .then((result) => {\n                if (result && result.data && result.data instanceof Array) {\n                  let data = result.data.sort(this.sortMethod);\n                  let childrenTreeData = [];\n                  data.forEach((item) => {\n                    let node = item;\n                    node.leaf = item.type === \'file\';\n                    childrenTreeData.push(node);\n                  });\n                  setTimeout(() => {\n                    return resolve(childrenTreeData);\n                  }, 500);\n                }\n              });\n          } else {\n            return resolve([]);\n          }\n        }\n      },\n      sortMethod(a, b) {\n        let aValue = (a.type === \'dir\' ? \'1\' : \'0\') + a.name;\n        let bValue = (b.type === \'dir\' ? \'1\' : \'0\') + b.name;\n        for (let i = 0; i < aValue.length && i < bValue.length; i++) {\n          if (aValue.charAt(i) !== bValue.charAt(i)) {\n            return aValue.charAt(i) - bValue.charAt(i) > 0 ? -1 : 1;\n          }\n        }\n        return 0;\n      },\n      preSaveMdFile(value) {\n        let tokenInCookie = getToken();\n        if (tokenInCookie) {\n          this.token = tokenInCookie;\n        }\n        this.currentMdEditorFileValue = value;\n        this.isShowPreSaveMdFileDialog = true;\n\n      },\n      sendSaveMdFile() {\n        setToken(this.token);\n        this.isShowPreSaveMdFileDialog = false;\n        this.currentMdEditorFileSaveButtonLoading = true;\n        MdApi.saveMdFile({\n          token: this.token,\n          url: this.currentMdEditorFile.url,\n          sha: this.currentMdEditorFile.sha,\n          content: Base64.toBase64(this.currentMdEditorFileValue),\n        })\n          .then((result) => {\n            if (result.status === 200) {\n              this.$notify({\n                title: \'保存成功\',\n                type: \'success\'\n              });\n              //更新sha值\n              MdApi.getFileFromGithub({ url: result.data.content.url })\n                .then((result) => {\n                  this.currentMdEditorFile.sha = result.data.sha;\n                  setTimeout(() => {\n                    this.currentMdEditorFileSaveButtonLoading = false;\n                  }, 1000);\n                });\n            } else {\n              this.$notify({\n                title: \'保存失败\',\n                type: \'error\'\n              });\n            }\n          })\n          .finally(() => {\n            setTimeout(() => {\n              this.currentMdEditorFileSaveButtonLoading = false;\n            }, 1000);\n          });\n      },\n      backToTreeHandler() {\n        this.isShowTree = true;\n        this.initSize();\n      }\n    },\n    watch: {\n      filterText(val) {\n        this.$refs.fileTree.filter(val);\n      }\n    },\n  };\n<\/script>\n\n<style scoped>\n  .custom-tree-node {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 14px;\n    padding-right: 8px;\n  }\n\n  /*缩小按钮*/\n  .el-button--mini, .el-button--mini.is-round {\n    padding: 3px;\n  }\n\n  /*缩小加载动画*/\n  /deep/ .el-loading-spinner .circular {\n    margin-top: 11px;\n    height: 20px;\n    width: 20px;\n    -webkit-animation: loading-rotate 2s linear infinite;\n    animation: loading-rotate 2s linear infinite;\n  }\n\n  .tool-bar-label {\n    font-weight: bolder;\n    font-size: 14px;\n    color: #555555;\n  }\n</style>\n']}])},"2f21":function(e,t,n){"use strict";var i=n("79e5");e.exports=function(e,t){return!!e&&i((function(){t?e.call(null,(function(){}),1):e.call(null)}))}},"456d":function(e,t,n){var i=n("4bf8"),a=n("0d58");n("5eda")("keys",(function(){return function(e){return a(i(e))}}))},"55dd":function(e,t,n){"use strict";var i=n("5ca1"),a=n("d8e8"),o=n("4bf8"),r=n("79e5"),l=[].sort,s=[1,2,3];i(i.P+i.F*(r((function(){s.sort(void 0)}))||!r((function(){s.sort(null)}))||!n("2f21")(l)),"Array",{sort:function(e){return void 0===e?l.call(o(this)):l.call(o(this),a(e))}})},"5eda":function(e,t,n){var i=n("5ca1"),a=n("8378"),o=n("79e5");e.exports=function(e,t){var n=(a.Object||{})[e]||Object[e],r={};r[e]=t(n),i(i.S+i.F*o((function(){n(1)})),"Object",r)}},"65a7":function(e,t,n){"use strict";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("mavon-editor",{style:{height:0===e.height?"auto":e.height+"px"},attrs:{editable:e.editorOptions.editable,subfield:e.editorOptions.subfield,defaultOpen:e.editorOptions.defaultOpen,placeholder:e.editorOptions.placeholder,toolbarsFlag:e.editorOptions.toolbarsFlag,shortCut:e.editorOptions.shortCut,toolbars:e.toolbars},on:{save:e.save},model:{value:e.mdText,callback:function(t){e.mdText=t},expression:"mdText"}})],1)},a=[],o=(n("c5f6"),{name:"MarkDownArea",props:{fileUrl:{type:String,default:""},height:{type:Number,default:0},editorOptions:{type:Object,default:function(){return{editable:!1,subfield:!1,defaultOpen:"preview",placeholder:"",toolbarsFlag:!1,shortCut:!0}}}},data:function(){return{mdText:"",toolbars:{bold:!0,italic:!0,header:!0,underline:!0,strikethrough:!0,mark:!0,superscript:!0,subscript:!0,quote:!0,ol:!0,ul:!0,link:!0,imagelink:!0,code:!0,table:!0,fullscreen:!0,readmodel:!0,htmlcode:!0,help:!0,undo:!0,redo:!0,trash:!0,save:!0,navigation:!0,alignleft:!0,aligncenter:!0,alignright:!0}}},created:function(){this.initMd()},methods:{initMd:function(){var e=this,t=new XMLHttpRequest;t.open("GET",this.fileUrl),t.send(),t.onreadystatechange=function(){4===t.readyState&&200===t.status&&(e.mdText=t.responseText)}},switchEdit:function(){this.editorOptions.editable=!this.editorOptions.editable,this.editorOptions.toolbarsFlag=!this.editorOptions.toolbarsFlag,this.editorOptions.subfield=!this.editorOptions.subfield},save:function(e){this.$emit("save",e)},copyToClipboard:function(e){var t=document.createElement("textarea");t.style.position="fixed",t.style.top="0",t.style.left="0",t.style.width="2em",t.style.height="2em",t.style.padding="0",t.style.border="none",t.style.outline="none",t.style.boxShadow="none",t.style.background="transparent",t.value=e,document.body.appendChild(t),t.select();try{var n=document.execCommand("copy");this.$notify({title:n?"成功复制到剪贴板":"该浏览器不支持点击复制到剪贴板",type:n?"success":"warning",duration:2e3})}catch(i){this.$notify({title:"不支持点击复制到剪贴板",type:"warning",duration:2e3})}document.body.removeChild(t)}}}),r=o,l=n("2877"),s=Object(l["a"])(r,i,a,!1,null,"73ae8518",null);t["a"]=s.exports},"6d0c":function(e,t,n){var i=n("07c4");"string"===typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);var a=n("499e").default;a("810d2948",i,!0,{sourceMap:!0,shadowMode:!1})},"7f7f":function(e,t,n){var i=n("86cc").f,a=Function.prototype,o=/^\s*function ([^ (]*)/,r="name";r in a||n("9e1e")&&i(a,r,{configurable:!0,get:function(){try{return(""+this).match(o)[1]}catch(e){return""}}})},8195:function(e,t,n){"use strict";var i=n("6d0c"),a=n.n(i);a.a},"8e6e":function(e,t,n){var i=n("5ca1"),a=n("990b"),o=n("6821"),r=n("11e9"),l=n("f1ae");i(i.S,"Object",{getOwnPropertyDescriptors:function(e){var t,n,i=o(e),s=r.f,d=a(i),c={},u=0;while(d.length>u)n=s(i,t=d[u++]),void 0!==n&&l(c,t,n);return c}})},"990b":function(e,t,n){var i=n("9093"),a=n("2621"),o=n("cb7c"),r=n("7726").Reflect;e.exports=r&&r.ownKeys||function(e){var t=i.f(o(e)),n=a.f;return n?t.concat(n(e)):t}},ac6a:function(e,t,n){for(var i=n("cadf"),a=n("0d58"),o=n("2aba"),r=n("7726"),l=n("32e9"),s=n("84f2"),d=n("2b4c"),c=d("iterator"),u=d("toStringTag"),p=s.Array,h={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},f=a(h),m=0;m<f.length;m++){var b,g=f[m],v=h[g],y=r[g],w=y&&y.prototype;if(w&&(w[c]||l(w,c,p),w[u]||l(w,u,g),s[g]=p,v))for(b in i)w[b]||o(w,b,i[b],!0)}},d7f2:function(e,t,n){"use strict";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticStyle:{margin:"0 10%"}},[n("div",{directives:[{name:"show",rawName:"v-show",value:e.isShowTree,expression:"isShowTree"}]},[n("div",{staticClass:"reduce-height-element"},[n("span",{staticClass:"tool-bar-label"},[e._v("初始目录深度(1开始，0为不限):")]),n("el-input-number",{attrs:{size:"mini",min:0,max:99999,label:""},model:{value:e.treeDeep,callback:function(t){e.treeDeep=t},expression:"treeDeep"}}),n("el-button",{staticStyle:{"margin-left":"10px"},attrs:{type:"primary",size:"small",plain:""},on:{click:e.initTreeData}},[e._v("加载列表")]),n("el-input",{staticClass:"reduce-height-element",attrs:{placeholder:"输入关键字进行过滤"},model:{value:e.filterText,callback:function(t){e.filterText=t},expression:"filterText"}})],1),n("div",{ref:"treeArea",staticStyle:{overflow:"scroll"},style:{height:e.tableAutoHeight+"px"}},[n("el-tree",{ref:"fileTree",attrs:{"default-expanded-keys":e.defaultExpandedKeys,load:e.loadNode,lazy:"","filter-node-method":e.filterNode,data:e.treeData,"node-key":"id",props:e.defaultProps},scopedSlots:e._u([{key:"default",fn:function(t){var i=t.node,a=t.data;return n("span",{staticClass:"custom-tree-node"},[n("span",{style:{fontWeight:"dir"===a.type?"bold":""}},[n("i",{class:e.fileIcon(a.type,a.name)}),e._v(e._s(i.label))]),n("span",[n("span",{staticStyle:{width:"2em",display:"inline-block"},attrs:{title:"预览"}},[e.showPreviewButton(a)?n("el-button",{staticStyle:{color:"#67c23a"},attrs:{plain:"",size:"mini"},on:{click:function(){e.previewHandler(a)}}},[n("i",{staticClass:"el-icon-view"})]):e._e()],1),n("span",{staticStyle:{width:"2em",display:"inline-block"},attrs:{title:"下载"}},[a.download_url&&a.download_url.length>0?n("el-button",{directives:[{name:"loading",rawName:"v-loading",value:i.loading,expression:"node.loading"}],staticStyle:{color:"#e6a23c"},attrs:{plain:"",size:"mini"},on:{click:function(){e.downloadFileHandler(a.download_url,a.name,i)}}},[n("i",{staticClass:"el-icon-download"})]):e._e()],1),n("span",{staticStyle:{width:"2em",display:"inline-block"},attrs:{title:"原文件链接"}},[a.download_url&&a.download_url.length>0?n("el-button",{staticStyle:{color:"#555555"},attrs:{plain:"",size:"mini"}},[n("a",{attrs:{href:a.download_url,target:"_blank"}},[n("i",{staticClass:"el-icon-link"})])]):e._e()],1),n("span",{staticStyle:{width:"2em",display:"inline-block"},attrs:{title:"前往github查看"}},[n("el-button",{staticStyle:{color:"#409eff"},attrs:{plain:"",size:"mini"}},[n("a",{attrs:{href:a.html_url,target:"_blank"}},[n("i",{staticClass:"el-icon-top-right"})])])],1)])])}}])})],1),e.isShowScrollTreeToTop?n("div",{staticStyle:{position:"fixed",right:"2%",bottom:"160px",border:"1px solid #ccc","border-radius":"5px","text-align":"center","vertical-align":"middle","font-size":"10px","font-weight":"bold",padding:"8px",cursor:"pointer",color:"#666666"},on:{click:e.scrollTreeToTop}},[n("i",{staticClass:"el-icon-arrow-up"}),n("br"),e._v("返"),n("br"),e._v("回"),n("br"),e._v("顶"),n("br"),e._v("部\n    ")]):e._e(),n("el-dialog",{attrs:{"close-on-click-modal":!1,visible:e.isShowImagePreview,"append-to-body":"",title:"图片预览"},on:{"update:visible":function(t){e.isShowImagePreview=t}}},[n("img",{attrs:{width:"100%",src:e.currentImagePreviewFile.download_url,alt:"图片预览"}})])],1),e.isShowTree?e._e():n("div",{staticStyle:{"text-align":"center"}},[n("div",{staticClass:"reduce-height-element"},[n("div",[n("el-button",{attrs:{type:"warning",size:"mini",plain:"",icon:"el-icon-arrow-left"},on:{click:e.backToTreeHandler}},[e._v("返回列表")]),n("el-button",{attrs:{type:"primary",size:"mini",plain:"",icon:"el-icon-edit"},on:{click:e.switchEdit}},[e._v("编辑/预览")])],1),n("div",[n("el-button",{staticStyle:{color:"#555",cursor:"default"},attrs:{type:"info",disabled:"",size:"mini",plain:""},on:{click:function(t){e.isShowTree=!0}}},[e._v("当前文档："+e._s(decodeURI(e.currentMdEditorFile.path)))])],1)]),n("mark-down-area",{ref:"md",attrs:{height:e.tableAutoHeight,"file-url":e.currentMdEditorFile.download_url},on:{save:e.preSaveMdFile}}),n("el-dialog",{staticStyle:{"text-align":"center"},attrs:{"close-on-click-modal":!1,visible:e.isShowPreSaveMdFileDialog,"append-to-body":"",title:"提交"},on:{"update:visible":function(t){e.isShowPreSaveMdFileDialog=t}}},[n("el-input",{attrs:{placeholder:"personal access token (保存在本地cookie)"},model:{value:e.token,callback:function(t){e.token=t},expression:"token"}}),n("el-button",{staticStyle:{"margin-top":"10px"},attrs:{loading:e.currentMdEditorFileSaveButtonLoading,type:"primary",plain:"",size:"small"},on:{click:e.sendSaveMdFile}},[e._v("确定")])],1)],1)])},a=[],o=(n("7f7f"),n("ac6a"),n("55dd"),n("65a7")),r=n("b775"),l=n("403a"),s={getFileFromGithub:function(e){return Object(r["a"])({method:"get",url:e.url})},saveMdFile:function(e){return Object(r["a"])({method:"put",headers:{Authorization:"token "+e.token},data:{message:"a new commit message from web",content:e.content,sha:e.sha},url:e.url})}},d=(n("8e6e"),n("456d"),n("bd86")),c=n("5880");function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(n,!0).forEach((function(t){Object(d["a"])(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var h={data:function(){return{tableAutoHeight:0}},created:function(){this.initSize()},watch:{contentHeight:function(e){this.setTableHeight(e)},contentWidth:function(){this.setTableHeight(this.contentHeight)}},methods:{initSize:function(){this.setTableHeight(this.contentHeight)},setTableHeight:function(e){var t=this;this.$nextTick((function(){for(var n=0,i=document.getElementsByClassName("reduce-height-element"),a=0;a<i.length;a++)n+=i[a].offsetHeight;t.tableAutoHeight=e-n}))}},computed:p({},Object(c["mapGetters"])({contentHeight:"getContentHeight",contentWidth:"getContentWidth"}))},f=h,m=n("6a1d"),b={name:"MarkdownDoc",mixins:[f],components:{MarkDownArea:o["a"]},data:function(){return{currentMdEditorFileValue:"",isShowPreSaveMdFileDialog:!1,token:"",isShowTree:!0,currentMdEditorFile:{},currentMdEditorFileSaveButtonLoading:!1,currentImagePreviewFile:{},filterText:"",treeDeep:1,isShowScrollTreeToTop:!1,isShowImagePreview:!1,defaultExpandedKeys:[],defaultProps:{children:"children",label:"name",isLeaf:"leaf"},treeData:[]}},created:function(){var e=this;this.$nextTick((function(){e.$refs.treeArea.addEventListener("scroll",e.treeAreaScrollHandler),e.initTreeData()}))},methods:{initTreeData:function(){this.treeData=[],this.defaultExpandedKeys=[],this.requestTreeData(l["a"].GITHUB_API_HOST+"/repos/"+l["a"].USER+"/"+l["a"].REPOSITORY+"/contents"+l["a"].DOC_ROOT,this.treeData,void 0,this.treeDeep)},requestTreeData:function(e,t,n,i){var a=this;n=n||0,n++,0!==i&&i<n||s.getFileFromGithub({url:void 0===e?"":e}).then((function(e){var o=e.data;o=o.sort(a.sortMethod),o.forEach((function(e){var o=e;o.deep=n,o.leaf="file"===e.type,o.id=e.path,"dir"===e.type&&((0===i||n<i)&&a.defaultExpandedKeys.push(o.id),o.children=[],a.requestTreeData(e.url,o.children,n,i)),t.push(o)}))}))},showPreviewButton:function(e){if("file"===e.type&&e.name.lastIndexOf(".")>0)switch(e.name.substring(e.name.lastIndexOf(".")+1).toLowerCase()){case"md":case"jpg":case"png":case"jpeg":case"bmp":case"gif":return!0;default:return!1}},previewHandler:function(e){if(e.name.lastIndexOf(".")>0)switch(e.name.substring(e.name.lastIndexOf(".")+1).toLowerCase()){case"md":this.isShowTree=!1,this.currentMdEditorFile=e,this.initSize();break;case"jpg":case"png":case"jpeg":case"bmp":case"gif":this.currentImagePreviewFile=e,this.isShowImagePreview=!0;break}},switchEdit:function(){this.$refs.md.switchEdit()},downloadFileHandler:function(e,t,n){n.loading=!0;var i=new XMLHttpRequest;i.responseType="arraybuffer",i.open("GET",e),i.send(),i.onreadystatechange=function(){try{if(4===i.readyState)if(200===i.status){var e=i.response,a=new Blob([e]);if("download"in document.createElement("a")){var o=document.createElement("a");o.download=t,o.style.display="none",o.href=URL.createObjectURL(a),document.body.appendChild(o),o.click(),URL.revokeObjectURL(o.href),document.body.removeChild(o)}else navigator.msSaveBlob(a,t)}else console.log("下载出错")}catch(r){console.log("下载出错",r)}finally{setTimeout((function(){n.loading=!1}),1500)}}},fileIcon:function(e,t){return"dir"===e?{"el-icon-folder":!0}:{"":!0}},scrollTreeToTop:function(){this.$refs.treeArea.scrollTop=0},filterNode:function(e,t){return!e||-1!==t.name.indexOf(e)},treeAreaScrollHandler:function(){this.isShowScrollTreeToTop=this.$refs.treeArea.scrollTop>this.tableAutoHeight},loadNode:function(e,t){var n=this;if(e.data.deep<this.treeDeep||0===this.treeDeep)setTimeout((function(){return t(e.data.children)}),500);else{if("dir"!==e.data.type)return t([]);s.getFileFromGithub({url:e.data.url}).then((function(e){if(e&&e.data&&e.data instanceof Array){var i=e.data.sort(n.sortMethod),a=[];i.forEach((function(e){var t=e;t.leaf="file"===e.type,a.push(t)})),setTimeout((function(){return t(a)}),500)}}))}},sortMethod:function(e,t){for(var n=("dir"===e.type?"1":"0")+e.name,i=("dir"===t.type?"1":"0")+t.name,a=0;a<n.length&&a<i.length;a++)if(n.charAt(a)!==i.charAt(a))return n.charAt(a)-i.charAt(a)>0?-1:1;return 0},preSaveMdFile:function(e){var t=Object(m["a"])();t&&(this.token=t),this.currentMdEditorFileValue=e,this.isShowPreSaveMdFileDialog=!0},sendSaveMdFile:function(){var e=this;Object(m["b"])(this.token),this.isShowPreSaveMdFileDialog=!1,this.currentMdEditorFileSaveButtonLoading=!0,s.saveMdFile({token:this.token,url:this.currentMdEditorFile.url,sha:this.currentMdEditorFile.sha,content:Base64.toBase64(this.currentMdEditorFileValue)}).then((function(t){200===t.status?(e.$notify({title:"保存成功",type:"success"}),s.getFileFromGithub({url:t.data.content.url}).then((function(t){e.currentMdEditorFile.sha=t.data.sha,setTimeout((function(){e.currentMdEditorFileSaveButtonLoading=!1}),1e3)}))):e.$notify({title:"保存失败",type:"error"})})).finally((function(){setTimeout((function(){e.currentMdEditorFileSaveButtonLoading=!1}),1e3)}))},backToTreeHandler:function(){this.isShowTree=!0,this.initSize()}},watch:{filterText:function(e){this.$refs.fileTree.filter(e)}}},g=b,v=(n("8195"),n("2877")),y=Object(v["a"])(g,i,a,!1,null,"8b5cc4c2",null);t["default"]=y.exports},f1ae:function(e,t,n){"use strict";var i=n("86cc"),a=n("4630");e.exports=function(e,t,n){t in e?i.f(e,t,a(0,n)):e[t]=n}}}]);